{
  "gateway": {
    "active": "Active",
    "address": "Address",
    "address-required": "Address required",
    "add-entry": "Add configuration",
    "add-attribute": "Add attribute",
    "add-attribute-update": "Add attribute update",
    "add-attribute-request": "Add attribute request",
    "add-key": "Add key",
    "add-timeseries": "Add time series",
    "add-mapping": "Add mapping",
    "add-slave": "Add Slave",
    "arguments": "Arguments",
    "add-rpc-method": "Add method",
    "add-rpc-request": "Add request",
    "add-value": "Add argument",
    "advanced-settings": "Advanced settings",
    "application": "Application",
    "bacnet": {
      "device-timeout": "Discovery timeout",
      "network-number": "Network number",
      "alt-responses-address": "Alternative responses address",
      "apdu-length": "APDU Length",
      "object-name": "Object Name",
      "object-type": {
        "analog-input": "Analog Input",
        "analog-output": "Analog Output",
        "analog-value": "Analog Value",
        "binary-input": "Binary Input",
        "binary-output": "Binary Output",
        "binary-value": "Binary Value"
      },
      "request-type": {
        "label": "Request Type",
        "write": "Write Property",
        "read": "Read Property"
      },
      "property-id": {
        "present-value": "Present Value",
        "status-flags": "Status Flags",
        "cov-increment": "COV Increment",
        "event-state": "Event State",
        "out-of-service": "Out of Service",
        "polarity": "Polarity",
        "priority-array": "Priority Array",
        "relinquish-default": "Relinquish Default",
        "current-command-priority": "Current Command Priority",
        "event-message-texts": "Event Message Texts",
        "event-message-texts-config": "Event Message Texts Config",
        "event-algorithm-inhibit-reference": "Event Algorithm Inhibit Reference",
        "time-delay-normal": "Time Delay Normal"
      },
      "segmentation": {
        "label": "Segmentation",
        "no": "None",
        "both": "Both",
        "transmit": "Transmit",
        "receive": "Receive"
      }
    },
    "baudrate": "Baudrate",
    "buffer-size": "Buffer size",
    "buffer-size-required": "Buffer size is required",
    "buffer-size-range": "Buffer size should be greater than 0",
    "bytesize": "Bytesize",
    "boolean": "Boolean",
    "bit": "Bit",
    "bit-target-type": "Bit target type",
    "delete-value": "Delete value",
    "delete-argument": "Delete argument",
    "delete-rpc-method": "Delete method",
    "delete-rpc-request": "Delete request",
    "delete-attribute-update": "Delete attribute update",
    "delete-attribute-request": "Delete attribute request",
    "advanced": "Advanced",
    "add-device": "Add device",
    "address-filter": "Address filter",
    "address-filter-required": "Address filter is required",
    "advanced-connection-settings": "Advanced connection settings",
    "advanced-configuration-settings": "Advanced configuration settings",
    "attributes": "Attributes",
    "attribute-updates": "Attribute updates",
    "attribute-on-platform": "Attribute on platform",
    "attribute-requests": "Attribute requests",
    "attribute-filter": "Attribute filter",
    "attribute-filter-hint": "Filter for incoming attribute name from platform, supports regular expression.",
    "attribute-filter-required": "Attribute filter required.",
    "attribute-name-expression": "Attribute name expression",
    "attribute-name-expression-required": "Attribute name expression required.",
    "attribute-name-expression-hint": "Hint for Attribute name expression",
    "basic": "Basic",
    "byte-order": "Byte order",
    "word-order": "Word order",
    "broker": {
      "connection": "Connection to broker",
      "name": "Broker name",
      "name-required": "Broker name required.",
      "security-types": {
        "anonymous": "Anonymous",
        "basic": "Basic",
        "certificates": "Certificates"
      }
    },
    "certificate": "Certificate",
    "CA-certificate-path": "Path to CA certificate file",
    "path-to-CA-cert-required": "Path to CA certificate file is required.",
    "change-connector-title": "Confirm connector change",
    "change-connector-text": "Switching connectors will discard any unsaved changes. Continue?",
    "checking-device-activity": "Checking device activity",
    "command": "Docker commands",
    "command-copied-message": "Docker command has been copied to clipboard",
    "configuration": "Configuration",
    "add-connector": "Add connector",
    "connector-add": "Add new connector",
    "connector-enabled": "Enable connector",
    "connector-name": "Connector name",
    "connector-name-required": "Connector name is required.",
    "connector-type": "Connector type",
    "connector-type-required": "Connector type is required.",
    "connectors": "Connectors",
    "connectors-config": "Connectors configuration",
    "connectors-table-enabled": "Enabled",
    "connectors-table-name": "Name",
    "connectors-table-type": "Type",
    "connectors-table-status": "Status",
    "connectors-table-actions": "Actions",
    "connectors-table-key": "Key",
    "connectors-table-class": "Class",
    "connection-timeout": "Connection timeout (s)",
    "connect-attempt-time": "Connect attempt time (ms)",
    "connect-attempt-count": "Connect attempt count",
    "copy-username": "Copy username",
    "copy-password": "Copy password",
    "copy-client-id": "Copy client ID",
    "connector-created": "Connector created",
    "connector-updated": "Connector updated",
    "create-new-one": "Create new one!",
    "rpc-command-save-template": "Save Template",
    "rpc-command-send": "Send",
    "rpc-command-result": "Response",
    "rpc-command-edit-params": "Edit parameters",
    "gateway-configuration": "General Configuration",
    "docker-label": "Use the following instruction to run IoT Gateway in Docker compose with credentials for selected device",
    "install-docker-compose": "Use the instructions to download, install and setup docker compose",
    "integer": "Integer",
    "inactive": "Inactive",
    "device": "Device",
    "devices": "Devices",
    "device-profile": "Device profile",
    "device-info-settings": "Device info settings",
    "device-info": {
      "entity-field": "Entity field",
      "source": "Source",
      "expression": "Value / Expression",
      "expression-hint": "Show help",
      "name": "Name",
      "profile-name": "Profile name",
      "device-name-expression": "Device name expression",
      "device-name-expression-required": "Device name expression is required.",
      "device-profile-expression-required": "Device profile expression is required."
    },
    "device-name-filter": "Device name filter",
    "device-name-filter-hint": "This field supports regular expressions to filter incoming data by device name.",
    "device-name-filter-required": "Device name filter is required.",
    "details": "Details",
    "delete-mapping-title": "Are you sure you want to delete the mapping related with '{{name}}'?",
    "delete-mapping-description": "Be careful, after the confirmation mapping configuration and all related data will become unrecoverable.",
    "delete-slave-title": "Are you sure you want to delete the server '{{name}}'?",
    "delete-slave-description": "Be careful, after the confirmation server configuration and all related data will become unrecoverable.",
    "delete-device-title": "Are you sure you want to delete the device '{{name}}'?",
    "delete-device-description": "Be careful, after the confirmation the device configuration and all related data will become unrecoverable.",
    "divider": "Divider",
    "download-configuration-file": "Download configuration file",
    "download-docker-compose": "Download docker-compose.yml for your gateway",
    "enable-remote-logging": "Enable remote logging",
    "ellipsis-chips-text": "+ {{count}} more",
    "launch-gateway": "Launch gateway",
    "launch-docker-compose": "Start the gateway using the following command in the terminal from folder with docker-compose.yml file",
    "logs-configuration": "Logs configuration",
    "create-new-gateway": "Create a new gateway",
    "create-new-gateway-text": "Are you sure you want create a new gateway with name: '{{gatewayName}}'?",
    "created-time": "Created time",
    "configuration-delete-dialog-header": "Configurations will be deleted",
    "configuration-delete-dialog-body": "Turning off Remote Configuration is possible only if there is physical access to the Gateway. All previous configurations will be deleted.<br><br> \nTo turn off configuration, enter gateway name below",
    "configuration-delete-dialog-input": "Gateway name",
    "configuration-delete-dialog-input-required": "Gateway name is mandatory",
    "configuration-delete-dialog-confirm": "Turn Off",
    "connector-duplicate-name": "Connector with such name already exists.",
    "connection-type": "Connection type",
    "connector-side": "Connector side",
    "payload-type": "Payload type",
    "platform-side": "Platform side",
    "JSON": "JSON",
    "JSON-hint": "Converter for this payload type processes MQTT messages in JSON format. It uses JSON Path expressions to extract vital details such as device names, device profile names, attributes, and time series from the message. And regular expressions to get device details from topics.",
    "byte": "Byte",
    "bytes": "Bytes",
    "bytes-hint": "Converter for this payload type designed for binary MQTT payloads, this converter directly interprets binary data to retrieve device names and device profile names, along with attributes and time series, using specific byte positions for data extraction.",
    "custom": "Custom",
    "custom-hint": "This option allows you to use a custom converter for specific data tasks. You need to add your custom converter to the extension folder and enter its class name in the UI settings. Any keys you provide will be sent as configuration to your custom converter.",
    "client-cert-path": "Path to client certificate file",
    "path-to-client-cert-required": "Path to client certificate file is required.",
    "client-id": "Client ID",
    "data-conversion": "Data conversion",
    "data-mapping": "Data mapping",
    "data-mapping-hint": "Data mapping provides the capability to parse and convert the data received from a MQTT client in incoming messages into specific attributes and time series data keys.",
    "opcua-data-mapping-hint": "Data mapping provides the capability to parse and convert the data received from a OPCUA server into specific data keys.",
    "delete": "Delete configuration",
    "delete-attribute": "Delete attribute",
    "delete-key": "Delete key",
    "delete-timeseries": "Delete time series",
    "default": "Default",
    "device-node": "Device node",
    "device-node-required": "Device node required.",
    "device-node-hint": "Path or identifier for device node on OPC UA server. Relative paths from it for attributes and time series can be used.",
    "device-name": "Device name",
    "device-profile-label": "Device profile",
    "device-name-required": "Device name required",
    "device-profile-required": "Device profile required",
    "download-tip": "Download configuration file",
    "drop-file": "Drop file here or",
    "enable": "Enable",
    "encoding": "Encoding",
    "enable-subscription": "Enable subscription",
    "extension": "Extension",
    "extension-hint": "Put your converter classname in the field. Custom converter with such class should be in extension/mqtt folder.",
    "extension-required": "Extension is required.",
    "extension-configuration": "Extension configuration",
    "extension-configuration-hint": "Configuration for converter. These arguments will be passed as a config to convert function.",
    "fill-connector-defaults": "Fill configuration with default values",
    "fill-connector-defaults-hint": "This property allows to fill connector configuration with default values on it's creation.",
    "from-device-request-settings": "Input request parsing",
    "from-device-request-settings-hint": "These fields support JSONPath expressions to extract a name from incoming message.",
    "function-code": "Function code",
    "function-codes": {
      "read-coils": "01 - Read Coils",
      "read-discrete-inputs": "02 - Read Discrete Inputs",
      "read-multiple-holding-registers": "03 - Read Multiple Holding Registers",
      "read-input-registers": "04 - Read Input Registers",
      "write-single-coil": "05 - Write Single Coil",
      "write-single-holding-register": "06 - Write Single Holding Register",
      "write-multiple-coils": "15 - Write Multiple Coils",
      "write-multiple-holding-registers": "16 - Write Multiple Holding Registers"
    },
    "to-device-response-settings": "Output request processing",
    "to-device-response-settings-hint": "For these fields you can use the following variables and they will be replaced with actual values: ${deviceName}, ${attributeKey}, ${attributeValue}",
    "gateway": "Gateway",
    "gateway-exists": "Device with same name is already exists.",
    "gateway-status": "Gateway status",
    "gateway-name": "Gateway name",
    "gateway-name-required": "Gateway name is required.",
    "gateway-saved": "Gateway configuration successfully saved.",
    "generate-client-id": "Generate Client ID",
    "grpc": "GRPC",
    "grpc-keep-alive-timeout": "Keep alive timeout (in ms)",
    "grpc-keep-alive-timeout-required": "Keep alive timeout is required",
    "grpc-keep-alive-timeout-min": "Keep alive timeout can not be less then 1",
    "grpc-keep-alive-timeout-pattern": "Keep alive timeout is not valid",
    "grpc-keep-alive": "Keep alive (in ms)",
    "grpc-keep-alive-required": "Keep alive is required",
    "grpc-keep-alive-min": "Keep alive can not be less then 1",
    "grpc-keep-alive-pattern": "Keep alive is not valid",
    "grpc-min-time-between-pings": "Min time between pings (in ms)",
    "grpc-min-time-between-pings-required": "Min time between pings is required",
    "grpc-min-time-between-pings-min": "Min time between pings can not be less then 1",
    "grpc-min-time-between-pings-pattern": "Min time between pings is not valid",
    "grpc-min-ping-interval-without-data": "Min ping interval without data (in ms)",
    "grpc-min-ping-interval-without-data-required": "Min ping interval without data is required",
    "grpc-min-ping-interval-without-data-min": "Min ping interval without data can not be less then 1",
    "grpc-min-ping-interval-without-data-pattern": "Min ping interval without data is not valid",
    "grpc-max-pings-without-data": "Max pings without data",
    "grpc-max-pings-without-data-required": "Max pings without data is required",
    "grpc-max-pings-without-data-min": "Max pings without data can not be less then 1",
    "grpc-max-pings-without-data-pattern": "Max pings without data is not valid",
    "info": "Info",
    "identity": "Identity",
    "inactivity-check-period-seconds": "Inactivity check period (in sec)",
    "inactivity-check-period-seconds-required": "Inactivity check period is required",
    "inactivity-check-period-seconds-min": "Inactivity check period can not be less then 1",
    "inactivity-check-period-seconds-pattern": "Inactivity check period is not valid",
    "inactivity-timeout-seconds": "Inactivity timeout (in sec)",
    "inactivity-timeout-seconds-required": "Inactivity timeout is required",
    "inactivity-timeout-seconds-min": "Inactivity timeout can not be less then 1",
    "inactivity-timeout-seconds-pattern": "Inactivity timeout is not valid",
    "unit-id": "Unit ID",
    "host": "Host",
    "host-required": "Host is required.",
    "holding_registers": "Holding registers",
    "coils_initializer": "Coils initializer",
    "input_registers": "Input registers",
    "discrete_inputs": "Discrete inputs",
    "json-parse": "Not valid JSON.",
    "json-required": "Field cannot be empty.",
    "JSONPath-hint": "Supports constants and JSONPath expressions to extract data.",
    "logs": {
      "logs": "Logs",
      "days": "days",
      "hours": "hours",
      "minutes": "minutes",
      "seconds": "seconds",
      "date-format": "Date format",
      "date-format-required": "Date format required",
      "log-format": "Log format",
      "log-type": "Log type",
      "log-format-required": "Log format required",
      "remote": "Remote logging",
      "remote-logs": "Remote logs",
      "local": "Local logging",
      "level": "Log level",
      "file-path": "File path",
      "file-path-required": "File path required",
      "saving-period": "Log saving period",
      "saving-period-min": "Log saving period can not be less then 1",
      "saving-period-required": "Log saving period required",
      "backup-count": "Backup count",
      "backup-count-min": "Backup count can not be less then 1",
      "backup-count-required": "Backup count required"
    },
    "max-number-of-workers": "Max number of workers",
    "max-number-of-workers-hint": "Maximal number of workers threads for converters \n(The amount of workers changes dynamically, depending on load) \nRecommended amount 50-150.",
    "max-number-of-workers-required": "Max number of workers is required.",
    "max-messages-queue-for-worker": "Max messages queue per worker",
    "max-messages-queue-for-worker-hint": "Maximal messages count that will be in the queue \nfor each converter worker.",
    "max-messages-queue-for-worker-required": "Max messages queue per worker is required.",
    "method": "Method",
    "method-name": "Method name",
    "method-required": "Method name is required.",
    "min-pack-send-delay": "Min pack send delay (in ms)",
    "min-pack-send-delay-required": "Min pack send delay is required",
    "min-pack-send-delay-min": "Min pack send delay can not be less then 10",
    "min-pack-send-delay-pattern": "Min pack send delay is not valid",
    "multiplier": "Multiplier",
    "mode": "Mode",
    "model-name": "Model name",
    "modifier": "Modifier",
    "modifier-invalid": "Modifier is not valid",
    "mqtt-version": "MQTT version",
    "name": "Name",
    "name-required": "Name is required.",
    "network-mask": "Network mask",
    "no-attributes": "No attributes",
    "no-attribute-updates": "No attribute updates",
    "no-attribute-requests": "No attribute requests",
    "no-connectors": "No connectors",
    "no-data": "No configurations",
    "no-gateway-found": "No gateway found.",
    "no-gateway-matching": " '{{item}}' not found.",
    "no-timeseries": "No time series",
    "no-keys": "No keys",
    "no-value": "No arguments",
    "no-rpc-methods": "No RPC methods",
    "no-rpc-requests": "No RPC requests",
    "path-hint": "The path is local to the gateway file system",
    "path-logs": "Path to log files",
    "path-logs-required": "Path is required.",
    "password": "Password",
    "password-required": "Password is required.",
    "permit-without-calls": "Keep alive permit without calls",
    "property-id": "Property ID",
    "poll-period": "Poll period (ms)",
    "poll-period-error": "Poll period should be at least {{min}} (ms).",
    "port": "Port",
    "port-required": "Port is required.",
    "port-limits-error": "Port should be number from {{min}} to {{max}}.",
    "private-key-path": "Path to private key file",
    "path-to-private-key-required": "Path to private key file is required.",
    "parity": "Parity",
    "product-code": "Product code",
    "product-name": "Product name",
    "raw": "Raw",
    "retain": "Retain",
    "retain-hint": "This flag tells the broker to store the message for a topic\nand ensures any new client subscribing to that topic\nwill receive the stored message.",
    "remote": "Remote configuration",
    "remote-logging-level": "Logging level",
    "remove-entry": "Remove configuration",
    "remote-shell": "Remote shell",
    "remote-configuration": "Remote Configuration",
    "request-expression": "Request expression",
    "request-expression-required": "Request expression is required",
    "retries": "Retries",
    "retries-on-empty": "Retries on empty",
    "retries-on-invalid": "Retries on invalid",
    "response": "Response",
    "rest": {
      "add-http-header": "Add HTTP header",
      "no-http-headers": "No HTTP headers",
      "delete-http-header": "Delete HTTP header",
      "ssl-verify": "SSL verify",
      "endpoint": "Endpoint",
      "http-methods": "HTTP methods",
      "http-method": "HTTP method",
      "on-error": "On error",
      "on-success": "On success",
      "tries": "Tries",
      "http-headers": "HTTP headers",
      "allow-redirects": "Allow redirects",
      "request-url-expression": "Request URL expression",
      "response-attribute": "Response attribute",
      "response-expected": "Expected",
      "response-type": {
        "default": "Default",
        "const": "Constant",
        "advanced": "Advanced"
      }
    },
    "rpc": {
      "title": "{{type}} Connector RPC parameters",
      "templates-title": "Connector RPC Templates",
      "methodFilter": "Method filter",
      "method-name": "Method name",
      "requestTopicExpression": "Request topic expression",
      "responseTopicExpression": "Response topic expression",
      "responseTimeout": "Response timeout",
      "valueExpression": "Value expression",
      "tag": "Tag",
      "type": "Type",
      "functionCode": "Function Code",
      "objectsCount": "Objects Count",
      "address": "Address",
      "method": "Method",
      "requestType": "Request Type",
      "requestTimeout": "Request Timeout",
      "objectType": "Object type",
      "identifier": "Identifier",
      "propertyId": "Property ID",
      "methodRPC": "Method RPC name",
      "withResponse": "With Response",
      "characteristicUUID": "Characteristic UUID",
      "methodProcessing": "Method Processing",
      "nodeID": "Node ID",
      "isExtendedID": "Is Extended ID",
      "isFD": "Is FD",
      "bitrateSwitch": "Bitrate Switch",
      "dataInHEX": "Data In HEX",
      "dataLength": "Data Length",
      "dataByteorder": "Data Byte Order",
      "dataBefore": "Data Before",
      "dataAfter": "Data After",
      "dataExpression": "Data Expression",
      "oid": "OID",
      "add-oid": "Add OID",
      "add-header": "Add header",
      "add-security": "Add security",
      "remove": "Remove",
      "requestFilter": "Request Filter",
      "requestUrlExpression": "Request URL Expression",
      "httpMethod": "HTTP Method",
      "timeout": "Timeout",
      "tries": "Tries",
      "httpHeaders": "HTTP Headers",
      "header-name": "Header name",
      "hint": {
        "modbus-response-reading": "RPC response will return all subtracted values from all connected devices when the reading functions are selected.",
        "modbus-writing-functions": "RPC will write a filled value to all connected devices when the writing functions are selected.",
        "opc-method": "A filled method name is the OPC-UA method that will processed on the server side (make sure your node has the requested method)."
      },
      "security-name": "Security name",
      "value": "Value",
      "security": "Security",
      "responseValueExpression": "Response Value Expression",
      "requestValueExpression": "Request Value Expression",
      "arguments": "Arguments",
      "add-argument": "Add argument",
      "write-property": "Write property",
      "read-property": "Read property",
      "analog-output": "Analog output",
      "analog-input": "Analog input",
      "binary-output": "Binary output",
      "binary-input": "Binary input",
      "binary-value": "Binary value",
      "analog-value": "Analog value",
      "write": "Write",
      "read": "Read",
      "scan": "Scan",
      "oids": "OIDS",
      "set": "Set",
      "multiset": "Multiset",
      "get": "Get",
      "bulk-walk": "Bulk walk",
      "table": "Table",
      "multi-get": "Multiget",
      "get-next": "Get next",
      "bulk-get": "Bulk get",
      "walk": "Walk",
      "save-template": "Save template",
      "template-name": "Template name",
      "template-name-required": "Template name is required.",
      "template-name-duplicate": "Template with such name already exists, it will be updated.",
      "command": "Command",
      "params": "Params",
      "json-value-invalid": "JSON value has an invalid format"
    },
    "rpc-methods": "RPC methods",
    "rpc-requests": "RPC requests",
    "request" : {
      "connect-request": "Connect request",
      "disconnect-request": "Disconnect request",
      "attribute-request": "Attribute request",
      "attribute-update": "Attribute update",
      "rpc-connection": "RPC command"
    },
    "request-type": "Request type",
    "request-timeout": "Request timeout (ms)",
    "requests-mapping": "Requests mapping",
    "requests-mapping-hint": "MQTT Connector requests allows you to connect, disconnect, process attribute requests from the device, handle attribute updates on the server and RPC processing configuration.",
    "request-topic-expression": "Request topic expression",
    "request-client-certificate": "Request client certificate",
    "request-topic-expression-required": "Request topic expression is required.",
    "response-timeout": "Response timeout",
    "response-timeout-required": "Response timeout is required.",
    "response-timeout-limits-error": "Timeout must be more then {{min}} ms.",
    "response-topic-Qos": "Response topic QoS",
    "response-topic-Qos-hint": "MQTT Quality of Service (QoS) is an agreement between the message sender and receiver that defines the level of delivery guarantee for a specific message.",
    "response-topic-expression": "Response topic expression",
    "response-topic-expression-required": "Response topic expression is required.",
    "response-value-expression": "Response value expression",
    "response-value-expression-required": "Response value expression is required.",
    "vendor-name": "Vendor name",
    "vendor-url": "Vendor URL",
    "value": "Value",
    "values": "Values",
    "value-required": "Value is required.",
    "value-expression": "Value expression",
    "value-expression-required": "Value expression is required.",
    "with-response": "With response",
    "without-response": "Without response",
    "other": "Other",
    "socket": "Socket",
    "save-tip": "Save configuration file",
    "scan-period": "Scan period (ms)",
    "scan-period-error": "Scan period should be at least {{min}} (ms).",
    "sub-check-period": "Subscription check period (ms)",
    "sub-check-period-error": "Subscription check period should be at least {{min}} (ms).",
    "security": "Security",
    "security-policy": "Security policy",
    "security-type": "Security type",
    "security-types": {
      "access-token": "Access Token",
      "username-password": "Username and Password",
      "tls": "TLS",
      "tls-access-token": "TLS + Access Token",
      "tls-private-key": "TLS + Private Key"
    },
    "select-connector": "Select connector to display config",
    "send-change-data": "Send data only on change",
    "send-data-to-platform": "Send data to platform",
    "send-data-on-change": "Send data only on change",
    "send-change-data-hint": "The values will be saved to the database only if they are different from the corresponding values in the previous converted message. This functionality applies to both attributes and time series in the converter output.",
    "server": "Server",
    "server-hostname": "Server hostname",
    "server-slave": "Server (Slave)",
    "servers-slaves": "Servers (Slaves)",
    "server-port": "Server port",
    "server-url": "Server endpoint url",
    "server-connection": "Server Connection",
    "server-config": "Server configuration",
    "server-slave-config": "Server (Slave) configuration",
    "server-url-required": "Server endpoint url is required.",
    "stopbits": "Stopbits",
    "strict": "Strict",
    "set": "Set",
    "show-map": "Show map",
    "statistics": {
      "entry": "Statistic entry",
      "custom-send-period": "Custom send period (in sec)",
      "custom-send-period-pattern": "Custom send period is not valid",
      "custom-send-period-min": "Custom send period can not be less then 60",
      "custom-send-period-required": "Custom send period is required",
      "create-command": "Create command",
      "attributes": "Attributes",
      "name-already-exists": "Attribute name already exists.",
      "telemetry": "Telemetry",
      "storage-message-count": "Storage message count",
      "messages-from-platform": "Messages from platform",
      "pushed-datapoints": "Pushed datapoints",
      "messages-pulled-from-storage": "Messages pulled from storage",
      "messages-pushed-to-platform": "Messages pushed to platform",
      "messages-sent-to-platform": "Messages sent to platform",
      "process-cpu-usage": "Gateway process CPU usage",
      "memory": "Gateway memory",
      "machine-resources": "Machine resources",
      "free-disk": "Gateway free disk",
      "statistic": "Statistic",
      "statistics": "Statistics",
      "general-statistics": "General statistics",
      "custom-statistics": "Custom statistics",
      "copy-message": "Copy message",
      "statistic-commands-empty": "No configured statistic keys found. You can configure them in \"Statistics\" tab in general configuration.",
      "statistics-button": "Go to configuration",
      "commands": "Commands",
      "name": "Time series name",
      "time-series-name-already-exists": "Time series name already exists.",
      "send-period": "Statistic send period (in sec)",
      "send-period-required": "Statistic send period is required",
      "send-period-min": "Statistic send period can not be less then 60",
      "send-period-pattern": "Statistic send period is not valid",
      "check-connectors-configuration": "Check connectors configuration (in sec)",
      "messages": "Messages",
      "max-payload-size-bytes": "Max payload size in bytes",
      "max-payload-size-bytes-required": "Max payload size in bytes is required",
      "max-payload-size-bytes-min": "Max payload size in bytes can not be less then 100",
      "max-payload-size-bytes-pattern": "Max payload size in bytes is not valid",
      "min-pack-size-to-send": "Min packet size to send",
      "min-pack-size-to-send-required": "Min packet size to send is required",
      "min-pack-size-to-send-min": "Min packet size to send can not be less then 100",
      "min-pack-size-to-send-pattern": "Min packet size to send is not valid",
      "no-config-commands-found": "No configuration commands found",
      "delete-command": "Delete command '{{command}}'?",
      "delete-command-data": "All command data will be deleted.",
      "edit-command": "Edit command",
      "change-command-title": "Discard command change",
      "change-command-text": "Cancelling command edit will discard any unsaved changes. Continue?",
      "no-command-found": "No command found",
      "no-commands-matching": "No command matching '{{command}}' were found.",
      "check-connectors-configuration-required": "Check connectors configuration is required",
      "check-connectors-configuration-min": "Check connectors configuration can not be less then 1",
      "check-connectors-configuration-pattern": "Check connectors configuration is not valid",
      "install-cmd": "Install command",
      "add": "Add command",
      "timeout": "Timeout (in sec)",
      "timeout-required": "Timeout is required",
      "timeout-min": "Timeout can not be less then 1",
      "timeout-pattern": "Timeout is not valid",
      "time-series-name-required": "Time series name is required",
      "time-series-name-pattern": "Time series name is not valid",
      "command": "Command",
      "command-required": "Command is required",
      "command-pattern": "Command is not valid",
      "remove": "Remove command"
    },
    "storage": "Storage",
    "storage-max-files": "Maximum number of files",
    "storage-max-files-min": "Minimum number is 1.",
    "storage-max-files-pattern": "Number is not valid.",
    "storage-max-files-required": "Number is required.",
    "storage-max-records": "Maximum records in storage",
    "storage-max-records-min": "Minimum number of records is 1.",
    "storage-max-records-pattern": "Number is not valid.",
    "storage-max-records-required": "Maximum records is required.",
    "storage-read-record-count": "Read record count in storage",
    "storage-read-record-count-min": "Minimum number of records is 1.",
    "storage-read-record-count-pattern": "Number is not valid.",
    "storage-read-record-count-required": "Read record count is required.",
    "storage-max-read-record-count": "Max read record count in storage",
    "storage-max-read-record-count-min": "Minimum number of records is 1.",
    "storage-max-read-record-count-pattern": "Number is not valid.",
    "storage-max-read-record-count-required": "Max Read record count is required.",
    "storage-data-folder-path": "Data folder path",
    "storage-data-folder-path-required": "Data folder path is required.",
    "storage-pack-size": "Maximum event pack size",
    "storage-pack-size-min": "Minimum number is 1.",
    "storage-pack-size-pattern": "Number is not valid.",
    "storage-pack-size-required": "Maximum event pack size is required.",
    "storage-path": "Storage path",
    "storage-path-required": "Storage path is required.",
    "storage-type": "Storage type",
    "storage-types": {
      "file-storage": "File storage",
      "memory-storage": "Memory storage",
      "sqlite": "SQLITE"
    },
    "suffix": {
      "s": "s",
      "ms": "ms"
    },
    "report-strategy": {
      "label": "Report strategy",
      "on-change": "On value change",
      "on-report-period": "On report period",
      "on-change-or-report-period": "On value change or report period",
      "report-period": "Report period",
      "on-received": "On received"
    },
    "source-type": {
      "msg": "Message",
      "topic": "Topic",
      "const": "Constant",
      "identifier": "Identifier",
      "path": "Path",
      "expression": "Expression",
      "request": "From request"
    },
    "workers-settings": "Workers settings",
    "thingsboard": "ThingsBoard",
    "general": "General",
    "timeseries": "Time series",
    "key": "Key",
    "keys": "Keys",
    "key-required": "Key is required.",
    "thingsboard-host": "Platform host",
    "thingsboard-host-required": "Host is required.",
    "thingsboard-port": "Platform port",
    "thingsboard-port-max": "Maximum port number is 65535.",
    "thingsboard-port-min": "Minimum port number is 1.",
    "thingsboard-port-pattern": "Port is not valid.",
    "thingsboard-port-required": "Port is required.",
    "tidy": "Tidy",
    "tidy-tip": "Tidy config JSON",
    "timeout": "Timeout",
    "timeout-error": "Timeout should be at least {{min}} (ms).",
    "title-connectors-json": "Connector {{typeName}} configuration",
    "type": "Type",
    "topic-filter": "Topic filter",
    "topic-required": "Topic filter is required.",
    "tls-path-ca-certificate": "Path to CA certificate on gateway",
    "tls-path-client-certificate": "Path to client certificate on gateway",
    "tls-connection": "TLS Connection",
    "master-connections": "Master Connections",
    "method-filter": "Method filter",
    "method-filter-hint": "Regular expression to filter incoming RPC method from platform.",
    "method-filter-required": "Method filter is required.",
    "messages-ttl-check-in-hours": "Messages TTL check in hours",
    "messages-ttl-check-in-hours-required": "Messages TTL check in hours is required.",
    "messages-ttl-check-in-hours-min": "Min number is 1.",
    "messages-ttl-check-in-hours-pattern": "Number is not valid.",
    "messages-ttl-in-days": "Messages TTL in days",
    "messages-ttl-in-days-required": "Messages TTL in days is required.",
    "messages-ttl-in-days-min": "Min number is 1.",
    "messages-ttl-in-days-pattern": "Number is not valid.",
    "mqtt-qos": "QoS",
    "mqtt-qos-required": "QoS is required",
    "mqtt-qos-range": "QoS values range is from 0 to 1",
    "qos": {
      "at-most-once": "0 - At most once",
      "at-least-once": "1 - At least once",
      "exactly-once": "2 - Exactly once"
    },
    "objects-count": "Objects count",
    "object-id": "Object ID",
    "objects-count-required": "Objects count is required",
    "wait-after-failed-attempts": "Wait after failed attempts (ms)",
    "tls-path-private-key": "Path to private key on gateway",
    "toggle-fullscreen": "Toggle fullscreen",
    "transformer-json-config": "Configuration JSON*",
    "update-config": "Add/update configuration JSON",
    "username": "Username",
    "username-required": "Username is required.",
    "unit-id-required": "Unit ID is required.",
    "vendor-id": "Vendor ID",
    "write-coil": "Write Coil",
    "write-coils": "Write Coils",
    "write-register": "Write Register",
    "write-registers": "Write Registers",
    "hints": {
      "enable-general-statistics": "Enables gateway statistics (machine, storage, connectors).",
      "enable-custom-statistics": "Enables collecting statistics using custom commands.",
      "buffer-size": "Buffer size for received data blocks.",
      "encoding": "Encoding used for writing received string data to storage.",
      "method": "Name for method on a platform.",
      "modbus-master": "Configuration sections for connecting to Modbus servers and reading data from them.",
      "modbus-server": "Configuration section for the Modbus server, storing data and sending updates to the platform when changes occur or at fixed intervals.",
      "remote-configuration": "Enables remote configuration and management of the gateway",
      "remote-shell": "Enables remote control of the operating system with the gateway from the Remote Shell widget",
      "host": "Hostname or IP address of platform server",
      "port": "Port of MQTT service on platform server",
      "token": "Access token for the gateway from platform server",
      "client-id": "MQTT client id for the gateway form platform server",
      "username": "MQTT username for the gateway form platform server",
      "password": "MQTT password for the gateway form platform server",
      "ca-cert": "Path to CA certificate file",
      "date-form": "Date format in log message",
      "object-id-required": "Object ID is required",
      "vendor-id-required": "Vendor ID is required",
      "data-folder": "Path to the folder that will contain data (Relative or Absolute)",
      "log-format": "Log message format",
      "remote-log": "Enables remote logging and logs reading from the gateway",
      "backup-count": "If backup count is > 0, when a rollover is done, no more than backup count files are kept - the oldest ones are deleted",
      "storage": "Provides configuration for saving incoming data before it is sent to the platform",
      "max-file-count": "Maximum number of files that will be created",
      "max-read-count": "Number of messages to retrieve from the storage and send to platform",
      "max-records": "Maximum count of records that will be stored in one file",
      "read-record-count": "Number of messages to retrieve from the storage and send to platform",
      "max-records-count": "Maximum number of data entries in storage before sending to platform",
      "ttl-check-hour": "How often will the Gateway check data for obsolescence",
      "ttl-messages-day": "Maximum number of days that the storage will retain data",
      "username-required-with-password": "Username required if password is specified",
      "commands": "Commands for collecting additional statistic",
      "attribute": "Statistic telemetry key",
      "timeout": "Timeout for command executing",
      "command": "The result of the command execution, will be used as the value for telemetry",
      "check-device-activity": "Enables monitor the activity of each connected device",
      "inactivity-timeout": "Time after whose the gateway will disconnect device",
      "inactivity-period": "Periodicity of device activity check",
      "minimal-pack-delay": "Delay between sending packs of messages (Decreasing this setting results in increased CPU usage)",
      "qos": "Quality of Service in MQTT messaging (0 - at most once, 1 - at least once)",
      "server-port": "Network port on which GRPC server will listen for incoming connections.",
      "grpc-keep-alive-timeout": "Maximum time the server should wait for a keepalive ping response before considering the connection dead.",
      "grpc-keep-alive": "Duration between two successive keepalive ping messages when there is no active RPC call.",
      "grpc-min-time-between-pings": "Minimum amount of time the server should wait between sending keepalive ping messages",
      "grpc-max-pings-without-data": "Maximum number of keepalive ping messages that the server can send without receiving any data before it considers the connection dead.",
      "grpc-min-ping-interval-without-data": "Minimum amount of time the server should wait between sending keepalive ping messages when there is no data being sent or received.",
      "permit-without-calls": "Allow server to keep the GRPC connection alive even when there are no active RPC calls.",
      "path-in-os": "Path in gateway os.",
      "memory": "Your data will be stored in the in-memory queue, it is a fastest but no persistence guarantee.",
      "file": "Your data will be stored in separated files and will be saved even after the gateway restart.",
      "sqlite": "Your data will be stored in file based database. And will be saved even after the gateway restart.",
      "opc-timeout": "Timeout in milliseconds for connecting to OPC-UA server.",
      "security-policy": "Security Policy defines the security mechanisms to be applied.",
      "install-cmd": "Packages that will be installed for command executing.",
      "scan-period": "Period in milliseconds to rescan the server.",
      "sub-check-period": "Period to check the subscriptions in the OPC-UA server.",
      "enable-subscription": "If true - the gateway will subscribe to interesting nodes and wait for data update and if false - the gateway will rescan OPC-UA server every scanPeriodInMillis.",
      "show-map": "Show nodes on scanning.",
      "method-name": "Name of method on OPC-UA server.",
      "arguments": "Arguments for the method (will be overwritten by arguments from the RPC request).",
      "min-pack-size-to-send": "Minimum package size for sending.",
      "max-payload-size-bytes": "Maximum package size in bytes",
      "poll-period": "Period in milliseconds to read data from nodes.",
      "poll-period-required": "Poll period is required.",
      "report-period-required": "Report period is required.",
      "report-period-range": "Report period must be greater than 100.",
      "timeout-pattern": "Timeout is not valid",
      "rest": {
        "endpoint-required": "Endpoint is required.",
        "endpoint-pattern": "Endpoint is not valid.",
        "device-name-filter-required": "Device name filter is required.",
        "device-name-filter-pattern": "Device name filter is not valid.",
        "request-url-expression-required": "Request URL expression is required.",
        "request-url-expression-pattern": "Request URL expression is not valid.",
        "value-expression-required": "Value expression is required.",
        "value-expression-pattern": "Value expression is not valid.",
        "method-filter-required": "Method filter is required.",
        "method-filter-pattern": "Method filter is not valid.",
        "scope-type": "Attribute scope on platform.",
        "tries-min": "Request tries number should be greater than 0.",
        "tries-pattern": "Request tries is invalid.",
        "http-methods-required": "HTTP methods are required.",
        "host": "Domain or IP address of the server.",
        "port": "Port on the server for listening clients connection.",
        "ssl-verify": "Enable SSL certificate verification.",
        "cert": "Path to the certificate file.",
        "key": "Path to the private key file",
        "endpoint": "Endpoint path on the server.",
        "http-methods": "HTTP methods allowed for endpoint.",
        "http-method": "Request to external URL HTTP method.",
        "JSON": "Converter for this payload type processes REST messages in JSON format. It uses JSON Path expressions to extract vital details such as device names, device profile names, attributes, and time series from the request body.",
        "extension": "Custom converter classname. File with this class should be in extension/rest folder.",
        "response-attribute-required": "Response attribute is required.",
        "response-attribute-pattern": "Response attribute is not valid.",
        "update-ssl": "Verify SSL certificate on the external server.",
        "attribute-filter": "Filter for incoming attribute name from platform, support regular expression.",
        "value-expression": "Used to create request body for request to external server. Supports ${deviceName}, ${deviceType}, ${attributeName}, ${attributeValue} variables.",
        "attribute-url-expression": "Used to create request URL for request to external server. Supports ${deviceName}, ${deviceType}, ${attributeName}, ${attributeValue} variables.",
        "method-filter": "Filter for RPC requests from the platform based on the method name. Supports regular expressions.",
        "attribute-name-expression-required": "Attribute name expression is required.",
        "attribute-name-expression-pattern": "Attribute name expression is not valid.",
        "attribute-filter-required": "Attribute filter is required.",
        "attribute-filter-pattern": "Attribute filter is not valid."
      },
      "socket": {
        "attribute-on-platform-required": "Attribute on platform is required",
        "attribute-requests-type": "The type of requested attribute can be “shared” or “client.“",
        "with-response": "Boolean flag that specifies whether to send a response back to platform.",
        "key-telemetry": "Name for telemetry on platform.",
        "key-attribute": "Name for attribute on platform."
      },
      "modbus": {
        "bit-target-type": "The response type can be either an integer (1/0) or a boolean (True/False).",
        "bit": "Specify the index of the bit to read from the array, or leave it blank to read the entire array.",
        "max-bit": "The bit value must not exceed the objects count.",
        "framer-type": "Type of a framer (Socket, RTU, or ASCII), if needed.",
        "host": "Hostname or IP address of Modbus server.",
        "port": "Modbus server port for connection.",
        "unit-id": "Modbus slave ID.",
        "connection-timeout": "Connection timeout (in seconds) for the Modbus server.",
        "byte-order": "Byte order for reading data.",
        "word-order": "Word order when reading multiple registers.",
        "retries": "Retrying data transmission to the master. Acceptable values: true or false.",
        "retries-on-empty": "Retry sending data to the master if the data is empty.",
        "retries-on-invalid": "Retry sending data to the master if it fails.",
        "poll-period": "Period in milliseconds to check attributes and telemetry on the slave.",
        "connect-attempt-time": "A waiting period in milliseconds before establishing a connection to the master.",
        "connect-attempt-count": "The number of connection attempts made through the gateway.",
        "wait-after-failed-attempts": "A waiting period in milliseconds before attempting to send data to the master.",
        "serial-port": "Serial port for connection.",
        "baudrate": "Baud rate for the serial device.",
        "stopbits": "The number of stop bits sent after each character in a message to indicate the end of the byte.",
        "bytesize": "The number of bits in a byte of serial data. This can be one of 5, 6, 7, or 8.",
        "parity": "The type of checksum used to verify data integrity. Options: (E)ven, (O)dd, (N)one.",
        "strict": "Use inter-character timeout for baudrates ≤ 19200.",
        "objects-count": "Depends on the selected type.",
        "address": "Register address to verify.",
        "key": "Key to be used as the attribute key for the platform instance.",
        "method": "Method name to be used for the platform instance.",
        "data-keys": "For more information about function codes and data types click on help icon",
        "modifier": "The retrieved value will be adjusted (by multiplying or dividing it) based on the specified modifier value."
      },
      "bacnet": {
        "object-id": "The gateway object identifier in the BACnet network.",
        "vendor-id": "The gateway vendor identifier in the BACnet network",
        "apdu-length": "Maximal length of the APDU.",
        "segmentation": "Segmentation type for transmitting large BACnet messages.",
        "key-object-id": "Object id in the BACnet device.",
        "property-id": "Property id in the BACnet device.",
        "request-type": "“writeProperty” to write data and “readProperty” to read data.",
        "request-timeout": "Timeout to wait the response from the BACnet device, milliseconds.",
        "device-timeout": "Period of time when the connector will try to discover BACnet devices.",
        "network-number": "Identifier of the network segment."
      }
    }
  }
}
